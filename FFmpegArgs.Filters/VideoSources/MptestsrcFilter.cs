namespace FFmpegArgs.Filters.VideoSources
{
    /// <summary>
    /// ... mptestsrc         |->V       Generate various test pattern.<br></br>
    /// https://ffmpeg.org/ffmpeg-filters.html#mptestsrc
    /// </summary>
    public class MptestsrcFilter : SourceImageFilter
    {
        internal MptestsrcFilter(BaseFilterGraph filterGraph) : base("mptestsrc", filterGraph)
        {
            AddMapOut();
        }
        /// <summary>
        /// Specify the frame rate of the sourced video, as the number of frames generated per second. It has to be a string in the format frame_rate_num/frame_rate_den, an integer number, a floating point number or a valid video frame rate abbreviation.<br></br> The default value is "25".
        /// </summary>
        /// <param name="r"></param>
        /// <returns></returns>
        public MptestsrcFilter Rate(Rational r)
          => this.SetOption("r", r);
        /// <summary>
        /// Set the duration of the sourced video.<br></br>
        /// If not specified, or the expressed duration is negative, the video is supposed to be generated forever.
        /// </summary>
        /// <param name="d"></param>
        /// <returns></returns>
        public MptestsrcFilter Duration(TimeSpan d)
          => this.SetOptionRange("d", d, TimeSpan.Zero, TimeSpan.MaxValue);
        /// <summary>
        /// Set the number or the name of the test to perform.
        /// </summary>
        /// <param name="test"></param>
        /// <returns></returns>
        public MptestsrcFilter Test(MptestsrcTest test)
          => this.SetOption("test", test);
        /// <summary>
        /// Set the maximum number of frames generated for each test, (from 1 to I64_MAX) (default 30)
        /// </summary>
        /// <param name="m"></param>
        /// <returns></returns>
        public MptestsrcFilter MaxFrames(long m)
          => this.SetOptionRange("m", m, 1, int.MaxValue);
    }
    public static class MptestsrcFilterExtensions
    {
        /// <summary>
        /// Generate various test patterns, as generated by the MPlayer test filter.<br></br>
        /// The size of the generated video is fixed, and is 256x256.This source is useful in particular for testing encoding features.
        /// </summary>
        /// <param name="filterGraph"></param>
        /// <returns></returns>
        public static MptestsrcFilter MptestsrcFilter(this BaseFilterGraph filterGraph)
          => new MptestsrcFilter(filterGraph);
    }
#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member
    public enum MptestsrcTest
    {
        dc_luma,
        dc_chroma,
        freq_luma,
        freq_chroma,
        amp_luma,
        amp_chroma,
        cbp,
        mv,
        ring1,
        ring2,
        all
    }
#pragma warning restore CS1591 // Missing XML comment for publicly visible type or member
}
