using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace FFmpegArgs.Filters.VideoSources
{
  /// <summary>
  /// ... mptestsrc         |->V       Generate various test pattern.<br></br>
  /// https://ffmpeg.org/ffmpeg-filters.html#mptestsrc
  /// </summary>
  public class MptestsrcFilter : SourceImageFilter
  {
    internal MptestsrcFilter(FilterGraph filterGraph) : base("mptestsrc",filterGraph)
    {
      AddMapOut();
    }

    /// <summary>
    /// Specify the frame rate of the sourced video, as the number of frames generated per second. It has to be a string in the format frame_rate_num/frame_rate_den, an integer number, a floating point number or a valid video frame rate abbreviation.<br></br> The default value is "25".
    /// </summary>
    /// <param name="r"></param>
    /// <returns></returns>
    public MptestsrcFilter Rate(float r)
      => this.SetOptionRange("r", r, 0, float.MaxValue);

    /// <summary>
    /// Specify the frame rate of the sourced video, as the number of frames generated per second. It has to be a string in the format frame_rate_num/frame_rate_den, an integer number, a floating point number or a valid video frame rate abbreviation.<br></br> The default value is "25".
    /// </summary>
    /// <param name="r"></param>
    /// <returns></returns>
    public MptestsrcFilter Rate(string r)
      => this.SetOption("r", r);

    /// <summary>
    /// Set the duration of the sourced video.<br></br>
    /// If not specified, or the expressed duration is negative, the video is supposed to be generated forever.
    /// </summary>
    /// <param name="d"></param>
    /// <returns></returns>
    public MptestsrcFilter Duration(TimeSpan d)
      => this.SetOptionRange("d", d, TimeSpan.Zero, TimeSpan.MaxValue);

    /// <summary>
    /// Set the number or the name of the test to perform.
    /// </summary>
    /// <param name="test"></param>
    /// <returns></returns>
    public MptestsrcFilter Test(MptestsrcTest test)
      => this.SetOption("test", test);

    /// <summary>
    /// Set the maximum number of frames generated for each test, default value is 30.
    /// </summary>
    /// <param name="m"></param>
    /// <returns></returns>
    public MptestsrcFilter MaxFrames(int m)
      => this.SetOptionRange("m", m, 0, int.MaxValue);
  }

  public static class MptestsrcFilterExtensions
  {
    /// <summary>
    /// Generate various test patterns, as generated by the MPlayer test filter.<br></br>
    /// The size of the generated video is fixed, and is 256x256.This source is useful in particular for testing encoding features.
    /// </summary>
    /// <param name="filterGraph"></param>
    /// <returns></returns>
    public static MptestsrcFilter MptestsrcFilter(this FilterGraph filterGraph)
      => new MptestsrcFilter(filterGraph);
  }

  public enum MptestsrcTest
  {
    dc_luma,
    dc_chroma,
    freq_luma,
    freq_chroma,
    amp_luma,
    amp_chroma,
    cbp,
    mv,
    ring1,
    ring2,
    all
  }
}
